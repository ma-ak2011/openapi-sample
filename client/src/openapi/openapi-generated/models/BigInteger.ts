/* tslint:disable */
/* eslint-disable */
/**
 * Implementing Server Side Kotlin
 * Sample API of Hands On Server Side Kotlin
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BigInteger
 */
export interface BigInteger {
    /**
     * 
     * @type {BigInteger}
     * @memberof BigInteger
     */
    bit?: BigInteger;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    bitLength: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    signum: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    bitCount: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    getSignum$ktMath: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof BigInteger
     */
    getMag$ktMath: Array<number>;
    /**
     * 
     * @type {BigInteger}
     * @memberof BigInteger
     */
    absoluteValue: BigInteger;
}

/**
 * Check if a given object implements the BigInteger interface.
 */
export function instanceOfBigInteger(value: object): value is BigInteger {
    if (!('bitLength' in value) || value['bitLength'] === undefined) return false;
    if (!('signum' in value) || value['signum'] === undefined) return false;
    if (!('bitCount' in value) || value['bitCount'] === undefined) return false;
    if (!('getSignum$ktMath' in value) || value['getSignum$ktMath'] === undefined) return false;
    if (!('getMag$ktMath' in value) || value['getMag$ktMath'] === undefined) return false;
    if (!('absoluteValue' in value) || value['absoluteValue'] === undefined) return false;
    return true;
}

export function BigIntegerFromJSON(json: any): BigInteger {
    return BigIntegerFromJSONTyped(json, false);
}

export function BigIntegerFromJSONTyped(json: any, ignoreDiscriminator: boolean): BigInteger {
    if (json == null) {
        return json;
    }
    return {
        
        'bit': json['bit'] == null ? undefined : BigIntegerFromJSON(json['bit']),
        'bitLength': json['bitLength'],
        'signum': json['signum'],
        'bitCount': json['bitCount'],
        'getSignum$ktMath': json['get_signum$kt_math'],
        'getMag$ktMath': json['get_mag$kt_math'],
        'absoluteValue': BigIntegerFromJSON(json['absoluteValue']),
    };
}

export function BigIntegerToJSON(value?: BigInteger | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'bit': BigIntegerToJSON(value['bit']),
        'bitLength': value['bitLength'],
        'signum': value['signum'],
        'bitCount': value['bitCount'],
        'get_signum$kt_math': value['getSignum$ktMath'],
        'get_mag$kt_math': value['getMag$ktMath'],
        'absoluteValue': BigIntegerToJSON(value['absoluteValue']),
    };
}

